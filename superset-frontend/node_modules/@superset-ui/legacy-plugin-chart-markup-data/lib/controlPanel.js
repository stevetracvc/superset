"use strict";

exports.__esModule = true;
exports.default = void 0;

var _translation = require("@superset-ui/translation");

var _validator = require("@superset-ui/validator");

var _chartControls = require("@superset-ui/chart-controls");

/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var _default = {
  controlPanelSections: [{
    label: (0, _translation.t)('Code'),
    expanded: true,
    controlSetRows: [[{
      name: 'markup_type',
      config: {
        type: 'SelectControl',
        label: (0, _translation.t)('Markup Type'),
        clearable: false,
        choices: (0, _chartControls.formatSelectOptions)(['markdown', 'html']),
        default: 'markdown',
        validators: [_validator.validateNonEmpty],
        description: (0, _translation.t)('Pick your favorite markup language')
      }
    }], [{
      name: 'code',
      config: {
        type: 'TextAreaControl',
        label: (0, _translation.t)('Code'),
        description: (0, _translation.t)('Put your code here'),
        mapStateToProps: state => ({
          language: state.controls && state.controls.markup_type ? state.controls.markup_type.value : 'markdown'
        }),
        default: ''
      }
    }]]
  }],
  sectionOverrides: {
    druidTimeSeries: {
      controlSetRows: []
    },
    sqlaTimeSeries: {
      controlSetRows: []
    }
  }
};
exports.default = _default;