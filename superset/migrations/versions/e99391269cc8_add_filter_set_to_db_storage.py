# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""add_filter_set_to_db_storage

Revision ID: e99391269cc8
Revises: 07071313dd52
Create Date: 2021-09-07 19:31:56.452408

"""

# revision identifiers, used by Alembic.
revision = 'e99391269cc8'
down_revision = '07071313dd52'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('filter_set',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dashboard_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('short_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('dttm', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )

    op.create_index('filter_set_pkey', 'filter_set', ['id'], unique=False)    
    op.create_foreign_key(None, 'filter_set', 'ab_user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'filter_set', 'dashboards', ['dashboard_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('filter_set')

    # ### end Alembic commands ###
